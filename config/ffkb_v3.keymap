/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
 
#define BASE 0
#define NAVI 1
#define NUMB 2
#define FUNC 3
 
&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

&sk {
    release-after-ms = <500>;
};

/ {

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder_1 &encoder_2>;
        triggers-per-rotation = <20>;
    };

    combos {
        #include "combos.overlay"
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        csemi: comma_semicolon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dcoln: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        swap_next: swap_next {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
            ignored-key-positons = <1>;
            timeout-ms = <750>;
        }
        swap_prev: swap_prev {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp LS(TAB)>, <&kt LALT>;
            ignored-key-positons = <1>;
            timeout-ms = <750>;
        }
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
        sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

        bindings = <
            &kp ESC      &kp Q        &kp W        &kp F        &kp P        &kp B                    &kp J        &kp L        &kp U        &kp Y        &kp SQT      &kp BSLH
            &kp TAB      &hm LGUI A   &hm LALT R   &hm LCTL S   &hm LSHIFT T &kp G                    &kp M        &hm RSHIFT N &hm RCTL E   &hm RALT I   &hm RGUI O   &kp LS(TAB)
            &sk LCTL     &kp Z        &kp X        &kp C        &kp D        &kp V                    &kp K        &kp H        &csemi       &dcoln       &kp FSLH     &kp LC(ENTER)
                                      &kp C_MUTE   &mo NUMB     &sk LSHIFT   &kp BSPC                 &kp ENTER    &kp SPACE    &mo NAVI     &kp C_MUTE
        >;
        };

        navi_layer {
        sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

        bindings = <
            &kp ESC      &kp K_APP    &kp HOME     &kp UP       &kp END      &kp PG_UP                &kp INS      &swap_next   &swap_prev   &kp C_BRI_UP &kp C_BRI_DN &none
            &kp TAB      &kp LC(A)    &kp LEFT     &kp DOWN     &kp RIGHT    &kp PG_DN                &kp C_VOL_UP &sk RSHIFT   &sk RCTL     &sk RALT     &sk RGUI     &kp LS(TAB)
            &none        &kp LC(Z)    &kp LC(X)    &kp LC(C)    &kp LC(V)    &kp LC(Y)                &kp C_VOL_DN &kp C_PREV   &kp C_PP     &kp C_NEXT   &kp C_STOP   &kp C_MUTE
                                      &trans       &trans       &trans       &kp DEL                  &trans       &trans       &trans       &trans
            >;
        };

        numb_layer {
        sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

        bindings = <
            &kp F6       &kp F5       &kp F4       &kp F3       &kp F2       &kp F1                   &kp EQUAL    &kp N7       &kp N8        &kp N9      &kp DOT     &kp COMMA
            &kp TAB      &sk LGUI     &sk LALT     &sk LCTL     &sk LSHIFT   &kp PG_DN                &kp PLUS     &kp N4       &kp N5        &kp N6      &kp ASTRK   &kp GRAVE
            &kp F12      &kp F11      &kp F10      &kp F9       &kp F8       &kp F7                   &kp MINUS    &kp N1       &kp N2        &kp N3      &kp FSLH    &none
                                      &trans       &trans       &trans       &trans                   &trans       &kp N0       &trans        &trans
        >;
        };

        func_layer {
        sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

        bindings = <
            &none        &none        &none        &none        &none        &none                    &none        &none        &none        &none        &none        &none
            &bt BT_CLR   &none        &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &none                    &none        &none        &none        &none        &none        &none
            &sys_reset   &none        &bt BT_DISC 0 &bt BT_DISC 1 &bt BT_DISC 2 &none                 &none        &none        &none        &none        &none        &bootloader
                                      &trans       &trans       &trans       &trans                   &trans       &trans       &trans       &trans
        >;
        };
    };
};
